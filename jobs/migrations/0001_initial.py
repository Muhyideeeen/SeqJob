# Generated by Django 4.1.3 on 2023-05-06 10:07

import cloudinary_storage.storage
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FilterQuetionFillInGap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quetion', models.TextField()),
                ('answer', models.TextField()),
                ('quetion_mark', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='FilterQuetionMultiChoiceQuetion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quetion', models.TextField()),
                ('option_to_choose_from', models.JSONField()),
                ('anwser', models.JSONField()),
                ('quetion_mark', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='FilterQuetionOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quetion', models.TextField()),
                ('option_to_choose_from', models.JSONField()),
                ('anwser', models.CharField(max_length=300)),
                ('quetion_mark', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=250)),
                ('is_active', models.BooleanField(default=False)),
                ('location', models.TextField()),
                ('country', models.TextField(default='')),
                ('job_type', models.CharField(choices=[('hybrid', 'Hybrid'), ('on_site', 'On Site'), ('remote', 'Remote')], max_length=10)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True)),
                ('currency', models.CharField(default='naira', max_length=20)),
                ('number_of_applicant', models.IntegerField(default=0)),
                ('job_required_document', models.TextField(default='')),
                ('description', models.FileField(default=None, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='jobdescription/%d/%m')),
                ('description_content', models.TextField(default='')),
                ('job_variant', models.CharField(choices=[('filter_only', 'filter_only'), ('filter_and_test', 'filter_and_test')], default='filter_only', max_length=30)),
                ('quetion_overall_mark', models.IntegerField(default=100)),
                ('job_categories', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='JobApplicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter_quetions_score', models.IntegerField(default=0)),
                ('test_quetions_score', models.IntegerField(default=0)),
                ('has_written_exam', models.BooleanField(default=False)),
                ('has_written_test', models.BooleanField(default=False)),
                ('has_mail_sent', models.BooleanField(default=False)),
                ('generated_panelist_total_score', models.IntegerField(default=0)),
                ('final_selection_state', models.CharField(choices=[('selected', 'Selected'), ('in_view', 'In View'), ('not_selected', 'Not Selected'), ('idle', 'Idle')], default='idle', max_length=20)),
                ('has_sent_selection_mail', models.BooleanField(default=False)),
                ('accept_application', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='JobApplicationDocmentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_file', models.TextField()),
                ('file', models.FileField(default=None, null=True, storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(), upload_to='job_application_docs')),
            ],
        ),
        migrations.CreateModel(
            name='JobFilterQuetion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('suitable', models.IntegerField(default=20)),
                ('end_suitable', models.IntegerField(default=100)),
                ('partially_suitable', models.IntegerField(default=11)),
                ('end_partially_suitable', models.IntegerField(default=20)),
                ('not_suitable', models.IntegerField(default=0)),
                ('end_not_suitable', models.IntegerField(default=10)),
            ],
        ),
        migrations.CreateModel(
            name='JobTestQuetion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('suitable', models.IntegerField(default=20)),
                ('end_suitable', models.IntegerField(default=100)),
                ('partially_suitable', models.IntegerField(default=11)),
                ('end_partially_suitable', models.IntegerField(default=20)),
                ('not_suitable', models.IntegerField(default=0)),
                ('end_not_suitable', models.IntegerField(default=10)),
            ],
        ),
        migrations.CreateModel(
            name='TestQuetionOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quetion', models.TextField()),
                ('option_to_choose_from', models.JSONField()),
                ('anwser', models.CharField(max_length=300)),
                ('quetion_mark', models.IntegerField(default=1)),
                ('job_test_quetion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.jobtestquetion')),
            ],
        ),
        migrations.CreateModel(
            name='TestQuetionMultiChoiceQuetion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quetion', models.TextField()),
                ('option_to_choose_from', models.JSONField()),
                ('anwser', models.JSONField()),
                ('quetion_mark', models.IntegerField(default=1)),
                ('job_test_quetion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.jobtestquetion')),
            ],
        ),
        migrations.CreateModel(
            name='TestQuetionFillInGap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quetion', models.TextField()),
                ('answer', models.TextField()),
                ('quetion_mark', models.IntegerField(default=1)),
                ('job_test_Quetion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.jobtestquetion')),
            ],
        ),
    ]
